paths:
  /auth/register:
    post:
      summary: register an account into tufts scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: user's name
                email:
                  type: string
                  description: user's email
                email_confirmation:
                  type: string
                  description: user's email again (for confirmation)
                password:
                  type: string
                  description: user's password
      responses:
        200:
          description: An array of course documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      result:
                        type: boolean
                        description: registration result (true or false)
                      message:
                        type: string
                        description: registration result message
  /auth/login:
    post:
      summary: register an account into tufts scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: user's email
                password:
                  type: string
                  description: user's password
      responses:
        200:
          description: An array of course documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      result:
                        type: boolean
                        description: login result (true or false)
                      message:
                        type: string
                        description: login result message
  /courses/docs/db-id/:id:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
            maximum: 1
          description: The MongoDB object ID to query
          example: "fe8fe71fbae1fdb75772bbe"
      summary: a single course document matched with given ObjectId
      responses:
        200:
          description: A single document.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/CourseDocument"
  /courses/docs/db-ids:
    get:
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            minimum: 1
            maximum: 7
          description: The MongoDB object IDs to query
      summary: a single course document matched with given ObjectId
      responses:
        200:
          description: A single document.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      documents:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseDocument"
  /courses/docs/course-id/:id:
    get:
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            minimum: 1
            maximum: 1
          description: The course id to query
          example: "COMP-0015"
      summary: all course documents matched with given course id
      responses:
        200:
          description: An array of course documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      documents:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseDocument"
  /courses/docs/course-name/:name:
    get:
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
            minimum: 1
            maximum: 1
          description: The course name to query
          example: "Data Structures"
      summary: all course documents matched with given course name
      responses:
        200:
          description: An array of course documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      documents:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseDocument"

  /courses/alg/search-table:
    get:
      summary: all course documents with minimum details of which substring of its course id was matched with the key
      responses:
        200:
          description: An array of course documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      key:
                        type: array
                        items:
                          $ref: "#/components/schemas/CourseInfoMinimum"
  /courses/schedule:
    post:
      summary: an automatically generated weekly schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/requestBodySchedule"

      responses:
        200:
          description: An array of course documents
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      Monday:
                        type: array
                        description: all classes happening on this day
                        items:
                          $ref: "#/components/schemas/ClassInfoInSchedule"
                      Tuesday:
                        type: array
                        description: all classes happening on this day
                        items:
                          $ref: "#/components/schemas/ClassInfoInSchedule"
                      Wednesday:
                        type: array
                        description: all classes happening on this day
                        items:
                          $ref: "#/components/schemas/ClassInfoInSchedule"
                      Friday:
                        type: array
                        description: all classes happening on this day
                        items:
                          $ref: "#/components/schemas/ClassInfoInSchedule"
                      Saturday:
                        type: array
                        description: all classes happening on this day
                        items:
                          $ref: "#/components/schemas/ClassInfoInSchedule"
                      Sunday:
                        type: array
                        description: all classes happening on this day
                        items:
                          $ref: "#/components/schemas/ClassInfoInSchedule"
                      Unscheduled:
                        type: array
                        description: all classes of which time was unspecified
                        items:
                          type: object
                          properties:
                            details:
                              type: string
                              description: 
                              example: Calculus III, MATH-0042
                            location:
                              type: string
                              description: 
                              example: Virtual
                            name:
                              type: string
                              description: 
                              example: R02-RCT
                            time_start:
                              type: string
                              description: 
                              example: ""
                            time_end:
                              type: string
                              description: 
                              example: ""
components:
  schemas:
    ClassInfoInSchedule:
      type: object
      properties:
        details:
          type: string
          description: 
          example: Calculus III, MATH-0042
        location:
          type: string
          description: 
          example: Virtual
        name:
          type: string
          description: 
          example: R02-RCT
        time_start:
          type: string
          description: 
          example: "10:30"
        time_end:
          type: string
          description: 
          example: "11:20"
    CourseInfoMinimum: # Minimum details of a course (for search-table)
      type: object
      properties:
        _id:
          type: object
          description: The MongoDB Object ID.
          example: ObjectId('fe8fe71fbae1fdb75772bbe')
        course_name:
          type: string
          description: The course's name.
          example: Data Structures
        course_id:
          type: string
          description: The course's id.
          example: COMP-0015
    CourseDocument: # Generic MongoDB course document
      type: object
      properties:
        _id:
          type: object
          description: The MongoDB Object ID.
          example: ObjectId('fe8fe71fbae1fdb75772bbe')
        course_name:
          type: string
          description: The course's name.
          example: Data Structures
        course_id:
          type: string
          description: The course's id.
          example: COMP-0015
        available_section_types:
          type: array
          description: Array of all section types, "componenets", in the course.
          example: ["Lecture", "Laboratory"]
        sections:
          type: object
          description: Details of all sections in this course.
          example: {
              "Lecture": [
                  {
                      "section_id": "01-LEC",
                      "classes": [
                          {
                              "time_start": 900,
                              "time_end": 975,
                              "day_of_week": 1,
                              "faculties": [
                                  "Mark A Sheldon"
                              ],
                              "room": "Virtual",
                              "city": ""
                          },
                          {
                              "time_start": 900,
                              "time_end": 975,
                              "day_of_week": 3,
                              "faculties": [
                                  "Mark A Sheldon"
                              ],
                              "room": "Virtual",
                              "city": ""
                          }
                      ]
                  }
              ],
              "Laboratory": [
                {
                    "section_id": "LA-LAB",
                    "classes": [
                        {
                            "time_start": 540,
                            "time_end": 615,
                            "day_of_week": 2,
                            "faculties": [
                                "Mark A Sheldon"
                            ],
                            "room": "Virtual",
                            "city": ""
                        }
                    ]
                },
                {
                    "section_id": "LB-LAB",
                    "classes": [
                        {
                            "time_start": 540,
                            "time_end": 615,
                            "days_of_ week": 2,
                            "faculties": [
                                "Mark A Sheldon"
                            ],
                            "room": "Virtual",
                            "city": ""
                        }
                    ]
                }

              ]

          }
    classes:
      type: array
      items: 
        $ref: "#/components/schemas/Class"
      Section:
        type: object
        properties:
          section_id:
            type: string
            example:
              "01-LEC"
          classes:
            type: array
            items: 
              $ref: "#/components/schemas/Class"
    Class:
      type: object
      properties:
        time_start:
          type: integer
          example: 900
        time_end:
          type: integer
          example: 975
        day_of_week:
          type: integer
          example: 1
        faculties:
          type: array
          description: array of the full names of instructors teaching this class
          example:
            ["Mark A Sheldon"]
        room:
          type: string
          example: "Barnum Hall E204"
        city:
          type: string
          example: "Medford"
    requestBodySchedule:
      type: object
      properties:
        objectIds:
          type: array
          description: array of Object Ids of chosen courses
          example:
            ["5ff7cb917050e1e1f4a1495a", "5ff7cb917050e1e1f4a148e5", "5ff7cb917050e1e1f4a1481a", "5ff7cb917050e1e1f4a14891", "5ff7cb917050e1e1f4a14e37"]
        filter:
          type: object
          properties:
            time:
              type: object
              properties:
                Monday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
                Tuesday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
                Wednesday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
                Thursday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
                Friday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
                Saturday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
                Sunday:
                  type: array
                  items:
                    type: object
                    properties:
                      time_earliest:
                        type: string
                        example: "00:00"
                      time_latest:
                        type: string
                        example: "23:59"
      
            
      