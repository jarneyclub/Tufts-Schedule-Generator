paths:
  ####################
  #                  #
  #     ACCOUNT      #
  #                  #
  ####################
  /auth/register:
    post:
      tags: 
        - Account
      summary: register an account into tufts scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: user's firstname
                last_name:
                  type: string
                  description: user's lastname
                userid:
                  type: string
                  description: user's email
                password:
                  type: string
                  description: user's password
                password_confirmation:
                  type: string
                  description: user's password again (for confirmation)
      responses:
        200:
          description: token to be used in subsequent Authorization headers
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: token (Authorization)
        400:
          description: Bad Request (password did not match)
        409:
          description: Conflict (e.g. Email already in use)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                  type: array
                  items:
                    type: object
                    properties:
                      id: string
                      status: string
                      title: string
                      detail: string
        403:
          description: Forbidden
        
  /auth/login:
    post:
      tags:
        - Account
      summary: register an account into tufts scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userid:
                  type: string
                  description: user's email
                password:
                  type: string
                  description: user's password
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      first_name:
                        type: string
                        description: user first name
                      last_name:
                        type: string
                        description: user last name
                      userid:
                        type: string
                        description: user email
  /auth/login_cookie:
    post:
      tags:
        - Account
      summary: Login with only an access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        200:
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      first_name:
                        type: string
                        description: user first name
                      last_name:
                        type: string
                        description: user last name
                      userid:
                        type: string
                        description: user email
  /auth/logout:
    post:
      tags:
        - Account
      summary: Log out of account. Only sets token to expire after a second.
      responses:
        200:
          description: Successful logout
  ####################
  #                  #
  #     COURSES      #
  #                  #
  ####################
  /courses/general?cnum={e1}:
    get:
      tags:
        - Courses
      summary: Get a list of courses from the past seven years of which course number matches query e.g. CS-0011 matching with CS
      parameters:
        - in: query
          name: cnum
          schema:
            type: string
          description: Portion of the course number to filter with
      responses:
        200:
          description: An array of General Course information
          content:
            application/json:
              schema:
                type: object
                properties:
                  courses:
                    type: array
                    items:
                      $ref: "#/components/schemas/CourseGeneral"
  /courses/term?cnum={e1}&attr={e2}:
    get:
      tags:
        - Courses
      summary: Get a list of courses offered in this term of which course number matches given course-num and attribute
      description: example. _BASE_URL/courses/term/query/?cnum=CS-0011&attr=SoE-Mathematics
      parameters:
        - in: query
          name: cnum
          schema:
            type: string
        - in: query
          name: attr
          schema:
            type: string
      responses:
        200:
          description: An array of Term Course information
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CourseTerm"
  /courses/attributes:
    get:
      tags:
        - Courses
      summary: Get list of current term's course attributes. The first attribute in the list is an empty string.
      responses:
        200:
          description: List of attributes offered this term
          content:
            application/json:
              schema:
                type: object
                properties:
                  attributes:
                    type: array
                    items:
                      type: string
                      example: Graduate Teaching Assistantship
  /courses/programs:
    get:
      tags:
        - Courses
      summary: Get the list of program names (e.g. School of A&S)
      responses:
        200:
          description: List of program names
          content:
            application/json:
              schema:
                type: object
                properties:
                  names:
                    type: array
                    items:
                      type: string
                      example: Cummings School DVM Program
  ####################
  #                  #
  #    DEGREE PLAN   #
  #                  #
  ####################
  /degreeplan:
    post:
      tags:
        - Degree Plan
      summary: Create a new degree plan
      parameters:
        - in: header
          name: Authorization
          schema: 
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RBSaveDegreePlan"
      responses:
        200:
          description: A single degree plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      plan_id: 
                        type: string
                      plan_name:
                        type: string
                      terms:
                        type: array
                        items:
                          $ref: "#/components/schemas/DegreePlan"
  /degreeplan?plan_id={planid}:
    get:
      tags:
        - Degree Plan
      summary: Load a degree plan
      parameters:
        - in: query
          name: plan_id
          schema:
            type: string
      responses:
        200:
          description: A single degree plan
          content:
            application/json:
              schema: 
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      plan_id:
                        type: string
                      plan_name:
                        type: string
                      terms:
                        type: array
                        items:
                          $ref: "#/components/schemas/DegreePlanTerm"
    delete:
      tags:
        - Degree Plan
      summary: Delete a degree plan
      parameters:
        - in: query
          name: plan_id
          schema:
            type: string
      responses:
        200:
          description: delete successful
  /degreeplan/{plan_id}/plan_name/{new_name}:
    patch:
      tags:
        - Degree Plan
      summary: Update the name of a degree plan
      parameters:
        - in: path
          name: plan_id
          schema:
            type: string
        - in: path
          name: new_name
          schema:
            type: string
      responses:
        200:
          description: update successful
  /degreeplans:
    get:
      tags:
        - Degree Plan
      summary: Get list of degree plans associated with user.
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        200:
          description: List of degree plans
          content:
            application/json:
              schema:
                type: object
                properties:
                  plans:
                    type: array
                    items:
                      type: object
                      properties:
                        plan_id:
                          type: string
                        plan_name:
                          type: string
                        terms:
                          type: array
                          items:
                            $ref: "#/components/schemas/DegreePlanTerm"
  /degreeplan/terms:
    delete:
      tags:
        - Degree Plan
      summary: Delete terms from a degree plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_term_ids:
                  type: array
                  items:
                    type: string
                plan_id:
                  type: string
      responses:
        200:
          description: Changed degree plan
          content:
            application/json:
              schema: 
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      plan_id:
                        type: string
                      plan_name:
                        type: string
                      terms:
                        type: array
                        items:
                          $ref: "#/components/schemas/DegreePlanTerm"
  /degreeplan/term:
    post:
      tags:
        - Degree Plan
      summary: Create an empty term for a degree plan and get its plan_term_id
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_term_id:
                  type: string
                term:
                  type: string
                  example: 2021-2022 Annual
      responses:
        200:
          description: plan_term_id of new term
          content:
            application/json:
              schema:
                type: object
                properties:
                  plan_term_id:
                    type: string
                    example: "142391huafaowe12312"
    put:
      tags:
        - Degree Plan
      summary: Save a term in a degree plan
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_term_id:
                  type: string
                courses:
                  type: array
                  items:
                    type: object
                    properties:
                      course_num: 
                        type: string
                      course_title:
                        type: string
                      units_esti:
                        type: string
                      gen_course_id:
                        type: string
      responses:
        200:
          description: Update successful
  /degreeplan/term/{plan_term_id}:
    delete:
      tags:
        - Degree Plan
      summary: Delete a term from a degree plan
      parameters:
        - in: path
          name: plan_term_id
          schema:
            type: string
      responses:
        200:
          description: Update successful
    /degreeplan/terms:
      delete:
        tags:
        - Degree Plan
      summary: Delete multiple terms from degree plan
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_term_ids:
                  type: array
                  items:
                    type: string
                plan_id:
                  type: string
      responses:
        200:
          description: Changed degree plan
          content:
            application/json:
              schema: 
                type: object
                properties:
                  plan:
                    type: object
                    properties:
                      plan_id:
                        type: string
                      plan_name:
                        type: string
                      terms:
                        type: array
                        items:
                          $ref: "#/components/schemas/DegreePlanTerm"
  ####################
  #                  #
  #    DEGREE REQ    #
  #                  #
  ####################
  /degreereq/public:
    post:
      tags:
        - Degree Requirements
      summary: Create a new public degree requirement (Only for developers)
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RBDegreeReqPublic"
      responses:
        200:
          description: Update was successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  pub_dr_id:
                    type: string
  /degreereq/public/{pub_dr_id}:
    delete:
      tags:
        - Degree Requirements
      summary: Delete a public degree requirement (Only for developers)
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
        - in: path
          name: pub_dr_id
          schema:
            type: string
      responses:
        200:
          description: Update successful
  /degreereqs/public?pname={name_substr}:
    get:
      tags:
        - Degree Requirements
      summary: Get a list of public degree requirements offered in this term of which program name matches given program name
      description: example. _BASE_URL/degreereqs/public/?pname=Computer%20Science%20BS
      parameters:
        - in: query
          name: pname
          schema:
            type: string
      responses:
        200:
          description: An array of Term Course information
          content:
            application/json:
              schema:
                type: object
                properties:
                  reqs:
                    type: array
                    items:
                      $ref: "#/components/schemas/DegreeReqPublic"
  /degreereq/public/copy/{pub_dr_id}:
    post:
      tags:
        - Degree Requirements
      summary: Copy a public degree requirement into private list
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
        - in: path
          name: pub_dr_id
          schema:
            type: string
      responses:
        200:
          description: Degree requirement
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DegreeReqPrivate"
  /degreereq/private:
    post:
      tags:
        - Degree Requirements
      summary: Create a private degree requirement
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RBDegreeReqPrivate"
      responses:
        200:
          description: Private degree requirement
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DegreeReqPrivate"
    get:
      tags:
        - Degree Requirements
      summary: Get a list of private degree requirements
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        200:
          description: List of private degree requirements
          content:
            application/json:
              schema:
                type: object
                properties:
                  reqs:
                    type: array
                    items:
                      $ref: "#/components/schemas/DegreeReqPrivate"
    put:
      tags:
        - Degree Requirements
      summary: Save a degree requirement
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/DegreeReqPrivate"
      responses:
        200:
          description: Update successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  priv_dr_id:
                    type: string
  /degreereq/private/{priv_dr_id}:
    get: 
      tags:
        - Degree Requirements
      summary: Get a private degree requirement
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
        - in: path
          name: priv_dr_id
          schema:
            type: string
      responses:
        200:
          description: Private degree requirement
          content:
            application/json:
              schema:
                type: object
                properties:
                  req:
                    $ref: "#/components/schemas/DegreeReqPrivate"
    delete:
      tags:
        - Degree Requirements
      summary: Delete a private degree requirement
      parameters:
        - in: header
          name: Authorization
          schema:
            type: string
      responses:
        200:
          description: Update successful
  /degreereq/private/copy/{priv_dr_id}:
    post:
      tags:
        - Degree Requirements
      summary: Copy a private degree requirement into public degree requirement. Only for developers.
      parameters:
        - in: path
          name: priv_dr_id
          schema:
            type: string
      responses:
        200:
          description: Degree requirement
          content:
            application/json:
              schema:
                type: object
                properties:
                  req:
                    $ref: "#/components/schemas/DegreeReqPublic"

  ####################
  #                  #
  #     SCHEDULE     #
  #                  #
  ####################
  /schedule:
    post:
      tags:
        - Schedule
      summary: Create an empty schedule on database and get back its empty contents with an ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sched_name:
                  type: string
      responses:
        200:
          description: An array of classes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Schedule"
    patch:
      tags:
        - Schedule
      summary: Generate and save to database a semester schedule based on user preferences. If there is no time preference for a day, the API assumes the entire day is available for scheduling.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sched_id:
                  type: string
                term_course_ids:
                  type: array
                  description: array of Object Ids of chosen courses
                  example:
                    ["5ff7cb917050e1e1f4a1495a", "5ff7cb917050e1e1f4a148e5", "5ff7cb917050e1e1f4a1481a", "5ff7cb917050e1e1f4a14891", "5ff7cb917050e1e1f4a14e37"]
                filter:
                  $ref: "#/components/schemas/ScheduleFilter"
      responses:
        200:
          description: An array of classes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Schedule"
    delete:
      tags:
        - Schedule
      summary: Delete saved schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sched_id:
                  type: string
        
  /schedules:
    get:
      tags:
        - Schedule
      summary: Get saved schedules
      responses:
        200:
          description: An array of arrays of classes
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedules:
                    type: array
                    items:
                      $ref: "#/components/schemas/Schedule"
  /schedule/name:
    patch:
      tags:
        - Schedule
      summary: Change name of schedule
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sched_id:
                  type: string
                new_name:
                  type: string
      responses:
        200:
          description: An array of arrays of classes
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedule:
                    $ref: "#/components/schemas/Schedule"
/responses:
    post:
      tags:
        - Responses
      summary: Save a customer feedback from "Contact Us" page
      requestBody: 
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                email: 
                  type: string
                message:
                  type: string
      responses:
        200:
          description: Update was successful
        400:
          description: Input could not be validated

components:
  schemas:
####################
#                  #
#     COURSES      #
#                  #
####################
    CourseGeneral:
      type: object
      properties:
        gen_course_id:
          type: string
          description: course number
        course_num:
          type: string
          description: course number
          example: CS-0011
        course_title:
          type: string
          description: course title
          example: Intro to Computer Science
        units_esti:
          type: number
          description: maximum amount of SHU's possible
          example: 1.5
    CourseTerm:
      type: object
      properties:
        term_course_id:
          type: string
          description: unique Term Course identifier
          example: "1947261349112412"
        course_num:
          type: string
          description: course number
          example: CS-0011
        course_title:
          type: string
          description: course title
          example: Intro to Computer Science
        units_esti:
          type: number
          description: maximum amount of SHU's possible
          example: 1.5
        attributes:
          type: array
          description: maximum amount of SHU's possible
          items:
            type: string
            example: "SOE-Computing"
          example: ["SOE-Computing", "SoE-Engineering"]
        closed:
          type: boolean
          description: whether all sections of this course are closed
        last_term:
          type: integer
          description: current term identifier
          example: 2215
####################
#                  #
#   DEGREE PLAN    #
#                  #
####################
    RBSaveDegreePlan:
      type: object
      properties:
        plan_name: 
          type: string
    RBSaveDegreePlanTerm:
      type: object
      properties:
        plan_term_id:
          type: string
        term:
          type: string
          example: 2021-2022 Annual
        courses:
          type: array
          items:
            type: object
            properties:
              course_num:
                type: string
              course_title:
                type: string
              units_esti:
                type: number
              gen_course_id:
                type: string
        plan_id:
          type: string
    DegreePlanTerm:
      type: object
      properties:
        plan_term_id:
          type: string
        term:
          type: string
          example: 2021-2022 Annual
        courses:
          type: array
          items:
            type: object
            properties:
              course_num: 
                type: string
              course_title:
                type: string
              units_esti:
                type: string
              gen_course_id:
                type: string
    DegreePlan:
      type: object
      properties:
        plan_id:
          type: string
        plan_name:
          type: string
####################
#                  #
#    DEGREE REQ    #
#                  #
####################
    DegreeReqPrivate:
      type: object
      properties:
        priv_dr_id:
          type: string
        program_name:
          type: string
        school:
          type: string
        degree:
          type: string
        part_id_tracker:
          type: number
        parts:
          type: array
          items:
            type: object
            properties:
              part_id:
                type: number
              part_name:
                type: string
              part_desc:
                type: string
              part_req_id_tracker:
                type: number
              part_reqs:
                type: array
                items:
                  type: object
                  properties:
                    part_req_id: 
                      type: number
                    course_num: 
                      type: string
                    course_note:
                      type: string
                    completed:
                      type: boolean
    DegreeReqPublic:
      type: object
      properties:
        pub_dr_id:
          type: string
        program_name:
          type: string
        school:
          type: string
        degree:
          type: string
        part_id_tracker:
          type: number
        parts:
          type: array
          items:
            type: object
            properties:
              part_id:
                type: number
              part_name:
                type: string
              part_desc:
                type: string
              part_reqs:
                type: array
                items:
                  type: object
                  properties:
                    part_req_id: 
                      type: number
                    course_num: 
                      type: string
                    course_note:
                      type: string
    RBDegreeReqPublic:
      type: object
      properties:
        program_name:
          type: string
        school:
          type: string
        degree:
          type: string
        part_id_tracker:
          type: number
        parts:
          type: array
          items:
            type: object
            properties:
              part_id:
                type: number
              part_name:
                type: string
              part_desc:
                type: string
              part_reqs:
                type: array
                items:
                  type: object
                  properties:
                    part_req_id: 
                      type: number
                    course_num: 
                      type: string
                    course_note:
                      type: string
    RBDegreeReqPrivate:
      type: object
      properties:
        program_name:
          type: string
        school:
          type: string
        degree:
          type: string
        part_id_tracker:
          type: number
        parts:
          type: array
          items:
            type: object
            properties:
              part_id:
                type: number
              part_name:
                type: string
              part_desc:
                type: string
              part_req_id_tracker:
                type: number
              part_reqs:
                type: array
                items:
                  type: object
                  properties:
                    part_req_id: 
                      type: number
                    course_num: 
                      type: string
                    course_note:
                      type: string
                    completed:
                      type: boolean
####################
#                  #
#     SCHEDULE     #
#                  #
####################
    ClassInfoInSchedule:
      type: object
      properties:
        details:
          type: string 
          example: Calculus III, MATH-0042
        location:
          type: string
          example: Virtual
        name:
          type: string 
          example: R02-RCT
        time_start:
          type: string
          example: "10:30"
        time_end:
          type: string
          example: "11:20"
        term_section_id:
          type: string
        instructors:
          type: string
    Schedule:
      type: object
      properties:
        sched_id:
          type: string
        sched_name:
          type: string
          example: My Schedule
        filter:
          $ref: "#/components/schemas/ScheduleFilter"
        term:
          type: string
          example: 2021-2022 Annual
        courses:
          type: array
          items:
            type: object
            properties:
              term_course_id: 
                type: string
              course_num:
                type: string
              course_title:
                type: string
              units_esti:
                type: number
        classes:
          type: object
          properties:
            Monday:
              type: array
              description: all classes happening on this day
              items:
                $ref: "#/components/schemas/ClassInfoInSchedule"
            Tuesday:
              type: array
              description: all classes happening on this day
              items:
                $ref: "#/components/schemas/ClassInfoInSchedule"
            Wednesday:
              type: array
              description: all classes happening on this day
              items:
                $ref: "#/components/schemas/ClassInfoInSchedule"
            Friday:
              type: array
              description: all classes happening on this day
              items:
                $ref: "#/components/schemas/ClassInfoInSchedule"
            Unscheduled:
              type: array
              description: all classes of which time was unspecified
              items:
                $ref: "#/components/schemas/ClassInfoInSchedule"
    ScheduleFilter:
      type: object
      properties:
        misc:
          type: object
          properties:
            ignoreTU:
              type: boolean
              example: false
            ignoreM:
              type: boolean
              example: false
            ignoreClosed:
              type: boolean
              example: true
            ignoreWL:
              type: boolean
              example: true
        time:
          type: object
          properties:
            Monday:
              type: array
              items:
                type: object
                properties:
                  time_earliest:
                    type: string
                    example: "00:00"
                  time_latest:
                    type: string
                    example: "23:59"
            Tuesday:
              type: array
              items:
                type: object
                properties:
                  time_earliest:
                    type: string
                    example: "00:00"
                  time_latest:
                    type: string
                    example: "23:59"
            Wednesday:
              type: array
              items:
                type: object
                properties:
                  time_earliest:
                    type: string
                    example: "00:00"
                  time_latest:
                    type: string
                    example: "23:59"
            Thursday:
              type: array
              items:
                type: object
                properties:
                  time_earliest:
                    type: string
                    example: "00:00"
                  time_latest:
                    type: string
                    example: "23:59"
            Friday:
              type: array
              items:
                type: object
                properties:
                  time_earliest:
                    type: string
                    example: "00:00"
                  time_latest:
                    type: string
                    example: "23:59"