{"version":3,"sources":["components/views/styles/Homepage.module.css","components/views/styles/CoursesSelectedList.module.css","components/views/styles/CourseSelected.module.css","components/views/styles/OptionsMainList.module.css","components/views/styles/OptionMainButton.module.css","components/views/CourseSelected.js","components/views/CoursesSelectedList.js","components/views/CourseNameRecommendation.js","components/views/OptionMainButton.js","components/views/OptionsMainList.js","components/Homepage.js","components/Schedule.js","App.js","index.js"],"names":["module","exports","CourseSelected","props","event","preventDefault","className","style","course","this","courseID","React","Component","CoursesSelectedList","container","id","selectedCourses","map","button","onClick","handleGenerate","to","CourseNameRecommendation","console","log","state","recommendedCourseIDs","listCourseIDs","courseIDsRecommended","undefined","courseIDLength","length","courseIDsMatchingFirstLetter","index","currentCourseIDMatching","substr","i","push","currentInput","recommendSearch","value","OptionMainButton","option","OptionsMainList","Homepage","handleAdd","bind","firstLetter","listMatches","exists","nameField","document","getElementById","name","toUpperCase","checkCourseID","arrayJoined","concat","setState","getListCourseIDs","process","fetch","then","response","json","result","status","mapCourseIDs","list_courseids","error","mapAlphabetical","type","containerInput","onSubmit","onChange","list","courseInput","autoComplete","placeholder","courseSubmit","Schedule","App","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.b628ff37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Homepage_container__cwfji\",\"containerInput\":\"Homepage_containerInput__2lEJ8\",\"courseInput\":\"Homepage_courseInput__1Wo5U\",\"courseSubmit\":\"Homepage_courseSubmit__3ylg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CoursesSelectedList_container__1Tmkz\",\"button\":\"CoursesSelectedList_button__2lQ6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"course\":\"CourseSelected_course__3NBu-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"OptionsMainList_container__1lS8U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"OptionMainButton_button__3s6JW\"};","import React from 'react';\nimport style from './styles/CourseSelected.module.css';\n\nclass CourseSelected extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className={style.course}>\n                {this.props.courseID}\n            </div>\n        );\n    }\n}\n\nexport default CourseSelected;","import React from 'react';\nimport style from './styles/CoursesSelectedList.module.css';\nimport CourseSelected from './CourseSelected.js';\nimport {\n    Link\n} from \"react-router-dom\";\nclass CoursesSelectedList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className = {style.container} id = \"coursesSelectedList\">\n                <h1>Your selected courses</h1>\n                <div>\n                    {this.props.selectedCourses.map(function (courseID) {\n                        return <CourseSelected courseID = {courseID}></CourseSelected>\n                    })}\n                </div>\n                <Link className = {style.button} onClick = {this.props.handleGenerate} to = \"/schedule\">\n                    Schedule\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default CoursesSelectedList;","import React from 'react';\n//import style from './styles/CourseNameRecommendation.module.css';\n\n\nclass CourseNameRecommendation extends React.Component {\n    \n    constructor (props) {\n        super(props);\n        console.log(\"render\");\n\n        this.state = {\n            recommendedCourseIDs: null\n        }\n    }\n    // O(k) where k is length of courseID\n    recommendSearch(listCourseIDs, courseID) {\n        var courseIDsRecommended = [];\n\n        if (courseID != undefined || courseID != null) {\n            // recommend if there is at least one character in input\n            if (courseID[0] != undefined) {\n                let courseIDLength = courseID.length;\n                let firstLetter = courseID[0];\n\n\n                // check there is a course that matches the first letter of user input\n                var courseIDsMatchingFirstLetter = listCourseIDs[firstLetter];\n                if (courseIDsMatchingFirstLetter != undefined) {\n\n                    // iterate over every course ID with first letter matching input\n                    for (let index = 0; index < courseIDsMatchingFirstLetter.length; index++) {\n                        let currentCourseIDMatching = courseIDsMatchingFirstLetter[index];\n\n                        // if the beginning substring of matched Course ID is equal to the input, recommend course id\n                        let substr = \"\";\n                        for (let i = 0; i < courseIDLength; i++) {\n                            substr += currentCourseIDMatching[i];\n                        }\n\n                        if (substr == courseID) {\n                            courseIDsRecommended.push(courseIDsMatchingFirstLetter[index]);\n\n                            // cap recommendation to reduce lag\n                            if (courseIDsRecommended.length > 20)\n                                break\n                        }\n\n                    }\n\n                    if (courseIDsRecommended.length == 1) {\n                        courseIDsRecommended = [];\n                    }\n\n                }\n                //console.log(courseIDsRecommended);\n            }\n            else {\n                courseIDsRecommended = [];\n            }\n        }\n        else {\n            courseIDsRecommended = [];\n        }\n\n        return courseIDsRecommended\n    }\n\n    render() {\n        let currentInput = this.props.currentInput;\n        let listCourseIDs = this.props.listCourseIDs;\n        console.log(\"rendeing\")\n        var recommendedCourseIDs = this.recommendSearch(listCourseIDs, currentInput);\n        // if (this.props.currentInput.length > 2) {\n        //     console.log(this.props.currentInput)\n        // }\n        // else {\n        //     console.log(this.props.currentInput)\n        //     recommendedCourseIDs = this.recommendSearch(this.state.recommendedCourseIDs, currentInput);\n        //     this.setState({ recommendedCourseIDs: recommendedCourseIDs });\n        // }\n\n        console.log(recommendedCourseIDs);\n\n        return(\n            <datalist id=\"recommendedCourseIDs\">\n                {recommendedCourseIDs.map(function (id) {\n                    return <option key={id} value={id} ></option>\n                })}\n            </datalist>\n        );\n    }\n\n}\nexport default CourseNameRecommendation;","import React from 'react';\nimport style from './styles/OptionMainButton.module.css';\n\nclass OptionMainButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            option: \"default\"\n        };\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n    render() {\n        return (\n            <button className={style.button}>\n                {this.state.option}\n            </button>\n        );\n    }\n}\n\nexport default OptionMainButton;","import React from 'react';\nimport style from './styles/OptionsMainList.module.css';\nimport OptionMainButton from './OptionMainButton.js';\n\nclass OptionsMainList extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit(event) {\n        //prevent default event handler\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className={style.container}>\n                <OptionMainButton></OptionMainButton>\n                <OptionMainButton></OptionMainButton>\n                <OptionMainButton></OptionMainButton>\n            </div>\n        );\n    }\n}\n\nexport default OptionsMainList;","import React from 'react';\nimport CoursesSelectedList from './views/CoursesSelectedList.js';\nimport CourseNameRecommendation from './views/CourseNameRecommendation';\nimport OptionsMainList from './views/OptionsMainList.js';\nimport style from './views/styles/Homepage.module.css';\n\nclass Homepage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            listCourseIDs: null, // all course IDs in semester catalog (mapped first letter)\n            currentInput: null,\n            recommendedCourseIDs: null,\n            selectedCourses: []\n        }\n\n        this.handleAdd = this.handleAdd.bind(this);\n        this.recommendSearch = this.recommendSearch.bind(this);\n    }\n\n    // O(n)\n    checkCourseID(courseID) {\n        if (courseID != \"\") {\n            let firstLetter = courseID[0];\n            let listMatches = this.state.listCourseIDs[firstLetter];\n            if (listMatches != undefined) {\n                let exists = false;\n                for (let index in listMatches) {\n                    if (listMatches[index] == courseID)\n                        exists = true;\n                }\n                return exists;\n            }\n            else {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n\n    handleAdd(event) {\n        //prevent default event handler\n        event.preventDefault();\n\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toUpperCase(); // get user input\n\n        // Check existence of user input and UPDATE STATE selectedCourses \n        if (this.checkCourseID(name)) {\n            var arrayJoined = this.state.selectedCourses.concat(name);\n            this.setState({ selectedCourses: arrayJoined });\n        }\n\n        nameField.value = \"\";\n    }\n\n    handleGenerate() {\n        var selectedCourses = this.state.selectedCourses;\n        console.log(\"handling generate\");\n    }\n\n    componentDidMount() {\n        // initialize {listCourseIDs} in this component's state\n        this.getListCourseIDs();\n    }\n    \n    async getListCourseIDs() {\n        var API_URL = process.env.REACT_APP_API_URL + \"/courses/list\";\n        fetch(API_URL)\n            .then(\n                (response) => response.json()\n            )\n            .then(result => {\n                //if the request is valid\n                if (result.status === \"200\") {\n                    this.mapCourseIDs(result.list_courseids);\n                }\n            },\n            (error) => {\n                console.log(\"error\", error);\n        });\n    }\n\n    // O(n)\n    mapCourseIDs(list_courseids) {\n        var mapAlphabetical = {};\n        for (let index in list_courseids) {\n            let firstLetter = list_courseids[index][0];\n\n            if (mapAlphabetical[firstLetter] == undefined) {\n                mapAlphabetical[firstLetter] = [];\n            }\n\n            mapAlphabetical[firstLetter].push(list_courseids[index]);\n        }\n        //initialize {listCourseIDs} with list of all course ids\n        this.setState({\n            listCourseIDs: mapAlphabetical\n        });\n    }\n\n    /* CourseID input scripts */\n\n    /* TODO: improve coverage beyond first letter */\n    /* TODO: move script to recommendation */\n    /* recommendSearch() is defined in this compoenent because \n    it is the event listener for input change*/\n    async recommendSearch() {\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toUpperCase(); // get user input\n\n        this.setState((state) => ({ currentInput: name })); // update state (currentInput)\n    }\n\n    // todo: link\n    handleChange() {\n        let nameField = document.getElementById(\"input\");\n        let name = nameField.value.toUpperCase(); // get user input\n        let nameLength = name.length;\n        this.setState((state) => ({ currentInput: name })); // update state (currentInput)\n    }\n\n\n    render() {\n        /* asynchronously render home page after getting courseIDs*/\n        if (this.state.listCourseIDs == null) {\n            // render loading state...\n            return (\n                <div className={style.container}>\n                    Loading...\n                </div>\n            );\n        }\n        else {\n            // render real UI..\n                return (\n                    <div className={style.container}>\n                        <CoursesSelectedList handleGenerate = {this.handleGenerate.bind(this)} selectedCourses={this.state.selectedCourses}>\n                            <input type = \"submit\"></input>\n                        </CoursesSelectedList>\n                        <div className={style.containerInput}>\n                            <h1>Choose a course</h1>\n                            <div>\n                                <form onSubmit={this.handleAdd}>\n                                    <div>\n                                        <input onChange={this.recommendSearch} list='recommendedCourseIDs' id=\"input\" className={style.courseInput} type=\"text\" autoComplete=\"off\" placeholder=\"COMP-0015\" />\n                                        <CourseNameRecommendation listCourseIDs = {this.state.listCourseIDs} currentInput = {this.state.currentInput}></CourseNameRecommendation>\n                                    </div>\n                                    <div>\n                                        <input className={style.courseSubmit} type=\"submit\" value=\"Add\" />\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                        <OptionsMainList></OptionsMainList>\n                    </div>\n                );\n        }\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nclass Schedule extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <Link to = \"/\">\n                    Back\n                </Link>\n            </div>\n        );\n    }\n}\n\nexport default Schedule;","import React from 'react';\nimport Homepage from \"./components/Homepage.js\";\nimport Schedule from \"./components/Schedule.js\";\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nexport default class App extends React.Component {\n\n    render() {\n        //return <Form/>;\n        return (\n            <div>\n                {/* A <Switch> looks through its children <Route>s and\n        renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/schedule\">\n                        <Schedule />\n                    </Route>\n                    <Route path=\"/\">\n                        <Homepage />\n                    </Route>\n                </Switch>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport {\n  BrowserRouter\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n  <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}